package com.scaler.dsa.hashing.homework;

import java.util.ArrayList;

public class CompareSortedArrays {

	public ArrayList<Integer> solve(ArrayList<Integer> A, ArrayList<ArrayList<Integer>> B) {
        ArrayList<Integer> out = new ArrayList<Integer>();
        int presum[] = new int[A.size()];
        int hashcode[] = new int[A.size()];
        for(int i = 0; i<A.size(); i++){
            hashcode[i] = A.get(i).hashCode();

        }
        presum[0] = hashcode[0];
        for(int i = 1; i < A.size(); i++){
            presum[i] = presum[i-1] + hashcode[i];
        }
        
        for(int i=0;i<B.size();i++){
            int l1 = B.get(i).get(0);
            int r1 = B.get(i).get(1);
            int l2 = B.get(i).get(2);
            int r2 = B.get(i).get(3);
            int v1 = presum[r1] - ((presum[l1] > 0) ? presum[l1 - 1] : 0);
            int v2 = presum[r2] - ((presum[l2] > 0) ? presum[l2 - 1] : 0);
            if(v1==v2){
                out.add(1);
            }else{
                out.add(0);
            }
        }
        return out;
    }
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
