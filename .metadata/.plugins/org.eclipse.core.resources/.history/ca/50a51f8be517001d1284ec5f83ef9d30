package com.scaler.dsa.hashing.assignment;

import java.util.ArrayList;
import java.util.HashMap;

class Pair<T1, T2> {
	
	int count;
	int duplicates;
	
	Pair(int count, int duplicates){
		this.count = count;
		this.duplicates = duplicates;
	}
}


public class PointsOnSameLine {
	
	int[][] points;
    int n;
    HashMap<Pair<Integer, Integer>, Integer> lines = new HashMap<Pair<Integer, Integer>, Integer>();
    int horizontal_lines;
    
	public int solve(ArrayList<Integer> x, ArrayList<Integer> y) {
		
		n = points.length;
		
		this.points = new int[n][n];
		
		for(int i=0; i<n; i++){
			
		}
		
        // If the number of points is less than 3
        // they are all on the same line.
        
        if (n < 3)
            return n;

        int max_count = 1;
        // Compute in a loop a max number of points
        // on a line containing point i.
        for (int i = 0; i < n - 1; i++)
            max_count = Math.max(max_points_on_a_line_containing_point_i(i), max_count);
        return max_count;
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
