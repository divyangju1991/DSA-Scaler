package com.scaler.dsa.recursion.backtracking;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * 
 * @author Divyang
 * 
 * Given array of N distinct nos. Generate all subsets.
 *
 */
public class Generate3Pairs {
	
	public void gen(int[] a, int idx, List<List<Integer>> ans){
		
		if(idx == a.length){
			
			List<Integer> sub = new ArrayList();
			
			int[] b = a.clone();
			
			for(int i=0; i<b.length; i++){
				
				if(b[i] == 1) {
					sub.add(b[i]);
				}
			}
			
			ans.add(sub);
			return;
		}
		
		a[idx] = 0;
		gen(a, idx+1, ans);
		a[idx] = 1;
		gen(a, idx+1, ans);
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int[] a = new int[]{1,2,3};
		List<List<Integer>> ans = new ArrayList();
		
		new Generate3Pairs().gen(a, 0, ans);
		
		System.out.println(ans);
	}

}
