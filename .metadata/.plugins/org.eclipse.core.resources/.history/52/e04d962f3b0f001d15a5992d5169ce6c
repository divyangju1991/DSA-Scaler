package com.scaler.dsa.recursion.backtracking;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/**
 * 
 * @author Divyang
 * Generating all permutations N distinct elements
 */
public class GenerateNElements {

	public void gene(int[] a, int idx, List<int[]> ans){
		
		if(idx == a.length){
			
			
		}
		
		for(int i=0; i<a.length; i++){
			gen(a, idx++1, ans);
		}
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
		int[] input = new int[]{1,2,3,4};
		
		List<int[]> ans = new ArrayList<>();
		
		new GenerateNElements().gene(input, 0, ans);
		
		for(int[] arr : ans){
			System.out.println(Arrays.toString(arr));
		}

	}

}
